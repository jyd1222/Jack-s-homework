class Point:

    def __init__(self, initX, initY):
        """ Create a new point at the given coordinates. """
        self.x = initX
        self.y = initY

    def getX(self):
        return self.x

    def getY(self):
        return self.y

    def distanceFromOrigin(self):
        return ((self.x ** 2) + (self.y ** 2)) ** 0.5

    def __str__(self):
        return "x=" + str(self.x) + ", y=" + str(self.y)

    def halfway(self, target):
         mx = (self.x + target.x) / 2
         my = (self.y + target.y) / 2
         return Point(mx, my)

    def distanceFromPoint(self,NewPoint):
        x = self.x - NewPoint.x 
        y = self.y - NewPoint.y 
        return(x**2 + y**2)*0.5
    
    def reflex_x(self):
        mx=self.x
        my=-self.y  
        return Point(mx,my) 
    
    def slope_from_origin(self):
        slope=self.y/self.x 
        return slope 
    
    def get_line_to(self,point):
        a=(self.y-point.y)/(self.x-point.x)
        b=self.y-a*self.x 
        line='('+str(a)+','+str(b)+')'
        return line


p = Point(3, 4)
q = Point(5, 12)


print(Point(4, 11).get_line_to(Point(6, 15)))



